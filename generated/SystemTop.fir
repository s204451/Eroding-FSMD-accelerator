;buildInfoPackage: chisel3, version: 3.3.2, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit SystemTop : 
  module DataMemory : 
    input clock : Clock
    input reset : Reset
    output io : {flip address : UInt<16>, dataRead : UInt<32>, flip writeEnable : UInt<1>, flip dataWrite : UInt<32>, flip testerEnable : UInt<1>, flip testerAddress : UInt<16>, testerDataRead : UInt<32>, flip testerWriteEnable : UInt<1>, flip testerDataWrite : UInt<32>}
    
    cmem memory : UInt<32>[65536] @[DataMemory.scala 18:20]
    when io.testerEnable : @[DataMemory.scala 22:24]
      read mport _T = memory[io.testerAddress], clock @[DataMemory.scala 24:37]
      io.testerDataRead <= _T @[DataMemory.scala 24:23]
      io.dataRead <= UInt<32>("h00") @[DataMemory.scala 26:17]
      when io.testerWriteEnable : @[DataMemory.scala 27:32]
        write mport _T_1 = memory[io.testerAddress], clock
        _T_1 <= io.testerDataWrite
        io.testerDataRead <= io.testerDataWrite @[DataMemory.scala 30:25]
        skip @[DataMemory.scala 27:32]
      skip @[DataMemory.scala 22:24]
    else : @[DataMemory.scala 32:16]
      read mport _T_2 = memory[io.address], clock @[DataMemory.scala 34:31]
      io.dataRead <= _T_2 @[DataMemory.scala 34:17]
      io.testerDataRead <= UInt<32>("h00") @[DataMemory.scala 36:23]
      when io.writeEnable : @[DataMemory.scala 37:26]
        write mport _T_3 = memory[io.address], clock
        _T_3 <= io.dataWrite
        io.dataRead <= io.dataWrite @[DataMemory.scala 40:19]
        skip @[DataMemory.scala 37:26]
      skip @[DataMemory.scala 32:16]
    
  module Accelerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip start : UInt<1>, done : UInt<1>, address : UInt<16>, flip dataRead : UInt<32>, writeEnable : UInt<1>, dataWrite : UInt<32>}
    
    reg stateReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Accelerator.scala 19:25]
    reg xReg : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Accelerator.scala 22:21]
    reg yReg : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Accelerator.scala 23:21]
    io.address <= UInt<1>("h00") @[Accelerator.scala 26:14]
    io.writeEnable <= UInt<1>("h00") @[Accelerator.scala 27:18]
    io.done <= UInt<1>("h00") @[Accelerator.scala 28:11]
    io.dataWrite <= UInt<1>("h00") @[Accelerator.scala 29:16]
    node _T = eq(UInt<4>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      when io.start : @[Accelerator.scala 35:22]
        stateReg <= UInt<4>("h01") @[Accelerator.scala 36:18]
        xReg <= UInt<1>("h00") @[Accelerator.scala 37:14]
        skip @[Accelerator.scala 35:22]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<4>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node _T_2 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 41:33]
        node _T_3 = add(xReg, _T_2) @[Accelerator.scala 41:26]
        node _T_4 = tail(_T_3, 1) @[Accelerator.scala 41:26]
        io.address <= _T_4 @[Accelerator.scala 41:18]
        node _T_5 = eq(xReg, UInt<5>("h014")) @[Accelerator.scala 42:18]
        when _T_5 : @[Accelerator.scala 42:28]
          stateReg <= UInt<4>("h0a") @[Accelerator.scala 43:18]
          skip @[Accelerator.scala 42:28]
        else : @[Accelerator.scala 44:34]
          node _T_6 = eq(yReg, UInt<5>("h014")) @[Accelerator.scala 44:24]
          when _T_6 : @[Accelerator.scala 44:34]
            node _T_7 = add(xReg, UInt<1>("h01")) @[Accelerator.scala 45:22]
            node _T_8 = tail(_T_7, 1) @[Accelerator.scala 45:22]
            xReg <= _T_8 @[Accelerator.scala 45:14]
            yReg <= UInt<1>("h00") @[Accelerator.scala 46:14]
            stateReg <= UInt<4>("h01") @[Accelerator.scala 47:18]
            skip @[Accelerator.scala 44:34]
          else : @[Accelerator.scala 50:85]
            node _T_9 = leq(xReg, UInt<5>("h013")) @[Accelerator.scala 48:24]
            node _T_10 = leq(yReg, UInt<5>("h013")) @[Accelerator.scala 49:24]
            node _T_11 = and(_T_9, _T_10) @[Accelerator.scala 48:32]
            node _T_12 = eq(yReg, UInt<1>("h00")) @[Accelerator.scala 50:25]
            node _T_13 = eq(yReg, UInt<5>("h013")) @[Accelerator.scala 50:41]
            node _T_14 = or(_T_12, _T_13) @[Accelerator.scala 50:33]
            node _T_15 = eq(xReg, UInt<1>("h00")) @[Accelerator.scala 50:58]
            node _T_16 = or(_T_14, _T_15) @[Accelerator.scala 50:50]
            node _T_17 = eq(xReg, UInt<5>("h013")) @[Accelerator.scala 50:74]
            node _T_18 = or(_T_16, _T_17) @[Accelerator.scala 50:66]
            node _T_19 = and(_T_11, _T_18) @[Accelerator.scala 49:32]
            when _T_19 : @[Accelerator.scala 50:85]
              stateReg <= UInt<4>("h09") @[Accelerator.scala 51:18]
              skip @[Accelerator.scala 50:85]
            else : @[Accelerator.scala 52:41]
              node _T_20 = eq(io.dataRead, UInt<1>("h00")) @[Accelerator.scala 52:32]
              when _T_20 : @[Accelerator.scala 52:41]
                stateReg <= UInt<4>("h02") @[Accelerator.scala 53:18]
                skip @[Accelerator.scala 52:41]
              else : @[Accelerator.scala 55:20]
                stateReg <= UInt<4>("h04") @[Accelerator.scala 56:18]
                skip @[Accelerator.scala 55:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_21 = eq(UInt<4>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_21 : @[Conditional.scala 39:67]
          node _T_22 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 60:33]
          node _T_23 = add(xReg, _T_22) @[Accelerator.scala 60:26]
          node _T_24 = tail(_T_23, 1) @[Accelerator.scala 60:26]
          node _T_25 = add(_T_24, UInt<9>("h0190")) @[Accelerator.scala 60:40]
          node _T_26 = tail(_T_25, 1) @[Accelerator.scala 60:40]
          io.address <= _T_26 @[Accelerator.scala 60:18]
          io.dataWrite <= UInt<1>("h00") @[Accelerator.scala 61:20]
          io.writeEnable <= UInt<1>("h01") @[Accelerator.scala 62:22]
          node _T_27 = add(yReg, UInt<1>("h01")) @[Accelerator.scala 63:20]
          node _T_28 = tail(_T_27, 1) @[Accelerator.scala 63:20]
          yReg <= _T_28 @[Accelerator.scala 63:12]
          stateReg <= UInt<4>("h03") @[Accelerator.scala 64:16]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_29 = eq(UInt<4>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_29 : @[Conditional.scala 39:67]
            node _T_30 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 67:33]
            node _T_31 = add(xReg, _T_30) @[Accelerator.scala 67:26]
            node _T_32 = tail(_T_31, 1) @[Accelerator.scala 67:26]
            node _T_33 = add(_T_32, UInt<9>("h0190")) @[Accelerator.scala 67:40]
            node _T_34 = tail(_T_33, 1) @[Accelerator.scala 67:40]
            io.address <= _T_34 @[Accelerator.scala 67:18]
            io.dataWrite <= UInt<1>("h00") @[Accelerator.scala 68:20]
            io.writeEnable <= UInt<1>("h01") @[Accelerator.scala 69:22]
            node _T_35 = add(yReg, UInt<1>("h01")) @[Accelerator.scala 70:20]
            node _T_36 = tail(_T_35, 1) @[Accelerator.scala 70:20]
            yReg <= _T_36 @[Accelerator.scala 70:12]
            stateReg <= UInt<4>("h01") @[Accelerator.scala 71:16]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_37 = eq(UInt<4>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_37 : @[Conditional.scala 39:67]
              node _T_38 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 75:33]
              node _T_39 = add(xReg, _T_38) @[Accelerator.scala 75:26]
              node _T_40 = tail(_T_39, 1) @[Accelerator.scala 75:26]
              node _T_41 = sub(_T_40, UInt<1>("h01")) @[Accelerator.scala 75:40]
              node _T_42 = tail(_T_41, 1) @[Accelerator.scala 75:40]
              io.address <= _T_42 @[Accelerator.scala 75:18]
              node _T_43 = eq(io.dataRead, UInt<1>("h00")) @[Accelerator.scala 76:24]
              when _T_43 : @[Accelerator.scala 76:33]
                stateReg <= UInt<4>("h09") @[Accelerator.scala 77:18]
                skip @[Accelerator.scala 76:33]
              else : @[Accelerator.scala 78:19]
                stateReg <= UInt<4>("h05") @[Accelerator.scala 79:18]
                skip @[Accelerator.scala 78:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_44 = eq(UInt<4>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_44 : @[Conditional.scala 39:67]
                node _T_45 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 83:33]
                node _T_46 = add(xReg, _T_45) @[Accelerator.scala 83:26]
                node _T_47 = tail(_T_46, 1) @[Accelerator.scala 83:26]
                node _T_48 = add(_T_47, UInt<1>("h01")) @[Accelerator.scala 83:40]
                node _T_49 = tail(_T_48, 1) @[Accelerator.scala 83:40]
                io.address <= _T_49 @[Accelerator.scala 83:18]
                node _T_50 = eq(io.dataRead, UInt<1>("h00")) @[Accelerator.scala 84:24]
                when _T_50 : @[Accelerator.scala 84:33]
                  stateReg <= UInt<4>("h09") @[Accelerator.scala 85:18]
                  skip @[Accelerator.scala 84:33]
                else : @[Accelerator.scala 86:19]
                  stateReg <= UInt<4>("h06") @[Accelerator.scala 87:18]
                  skip @[Accelerator.scala 86:19]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_51 = eq(UInt<4>("h06"), stateReg) @[Conditional.scala 37:30]
                when _T_51 : @[Conditional.scala 39:67]
                  node _T_52 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 91:33]
                  node _T_53 = add(xReg, _T_52) @[Accelerator.scala 91:26]
                  node _T_54 = tail(_T_53, 1) @[Accelerator.scala 91:26]
                  node _T_55 = sub(_T_54, UInt<5>("h014")) @[Accelerator.scala 91:40]
                  node _T_56 = tail(_T_55, 1) @[Accelerator.scala 91:40]
                  io.address <= _T_56 @[Accelerator.scala 91:18]
                  node _T_57 = eq(io.dataRead, UInt<1>("h00")) @[Accelerator.scala 92:24]
                  when _T_57 : @[Accelerator.scala 92:33]
                    stateReg <= UInt<4>("h09") @[Accelerator.scala 93:18]
                    skip @[Accelerator.scala 92:33]
                  else : @[Accelerator.scala 94:19]
                    stateReg <= UInt<4>("h07") @[Accelerator.scala 95:18]
                    skip @[Accelerator.scala 94:19]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_58 = eq(UInt<4>("h07"), stateReg) @[Conditional.scala 37:30]
                  when _T_58 : @[Conditional.scala 39:67]
                    node _T_59 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 99:33]
                    node _T_60 = add(xReg, _T_59) @[Accelerator.scala 99:26]
                    node _T_61 = tail(_T_60, 1) @[Accelerator.scala 99:26]
                    node _T_62 = add(_T_61, UInt<5>("h014")) @[Accelerator.scala 99:40]
                    node _T_63 = tail(_T_62, 1) @[Accelerator.scala 99:40]
                    io.address <= _T_63 @[Accelerator.scala 99:18]
                    node _T_64 = eq(io.dataRead, UInt<1>("h00")) @[Accelerator.scala 100:24]
                    when _T_64 : @[Accelerator.scala 100:33]
                      stateReg <= UInt<4>("h09") @[Accelerator.scala 101:18]
                      skip @[Accelerator.scala 100:33]
                    else : @[Accelerator.scala 102:19]
                      stateReg <= UInt<4>("h08") @[Accelerator.scala 103:18]
                      skip @[Accelerator.scala 102:19]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_65 = eq(UInt<4>("h08"), stateReg) @[Conditional.scala 37:30]
                    when _T_65 : @[Conditional.scala 39:67]
                      node _T_66 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 107:33]
                      node _T_67 = add(xReg, _T_66) @[Accelerator.scala 107:26]
                      node _T_68 = tail(_T_67, 1) @[Accelerator.scala 107:26]
                      node _T_69 = add(_T_68, UInt<9>("h0190")) @[Accelerator.scala 107:40]
                      node _T_70 = tail(_T_69, 1) @[Accelerator.scala 107:40]
                      io.address <= _T_70 @[Accelerator.scala 107:18]
                      io.dataWrite <= UInt<8>("h0ff") @[Accelerator.scala 108:20]
                      io.writeEnable <= UInt<1>("h01") @[Accelerator.scala 109:22]
                      node _T_71 = add(yReg, UInt<1>("h01")) @[Accelerator.scala 110:20]
                      node _T_72 = tail(_T_71, 1) @[Accelerator.scala 110:20]
                      yReg <= _T_72 @[Accelerator.scala 110:12]
                      stateReg <= UInt<4>("h01") @[Accelerator.scala 111:16]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_73 = eq(UInt<4>("h09"), stateReg) @[Conditional.scala 37:30]
                      when _T_73 : @[Conditional.scala 39:67]
                        node _T_74 = mul(UInt<5>("h014"), yReg) @[Accelerator.scala 114:33]
                        node _T_75 = add(xReg, _T_74) @[Accelerator.scala 114:26]
                        node _T_76 = tail(_T_75, 1) @[Accelerator.scala 114:26]
                        node _T_77 = add(_T_76, UInt<9>("h0190")) @[Accelerator.scala 114:40]
                        node _T_78 = tail(_T_77, 1) @[Accelerator.scala 114:40]
                        io.address <= _T_78 @[Accelerator.scala 114:18]
                        io.dataWrite <= UInt<1>("h00") @[Accelerator.scala 115:20]
                        io.writeEnable <= UInt<1>("h01") @[Accelerator.scala 116:22]
                        node _T_79 = add(yReg, UInt<1>("h01")) @[Accelerator.scala 117:20]
                        node _T_80 = tail(_T_79, 1) @[Accelerator.scala 117:20]
                        yReg <= _T_80 @[Accelerator.scala 117:12]
                        stateReg <= UInt<4>("h01") @[Accelerator.scala 118:16]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_81 = eq(UInt<4>("h0a"), stateReg) @[Conditional.scala 37:30]
                        when _T_81 : @[Conditional.scala 39:67]
                          io.done <= UInt<1>("h01") @[Accelerator.scala 121:15]
                          stateReg <= UInt<4>("h0a") @[Accelerator.scala 122:16]
                          skip @[Conditional.scala 39:67]
    
  module SystemTop : 
    input clock : Clock
    input reset : UInt<1>
    output io : {done : UInt<1>, flip start : UInt<1>, flip testerDataMemEnable : UInt<1>, flip testerDataMemAddress : UInt<16>, testerDataMemDataRead : UInt<32>, flip testerDataMemWriteEnable : UInt<1>, flip testerDataMemDataWrite : UInt<32>}
    
    inst dataMemory of DataMemory @[SystemTop.scala 18:26]
    dataMemory.clock <= clock
    dataMemory.reset <= reset
    inst accelerator of Accelerator @[SystemTop.scala 19:27]
    accelerator.clock <= clock
    accelerator.reset <= reset
    io.done <= accelerator.io.done @[SystemTop.scala 23:11]
    accelerator.io.start <= io.start @[SystemTop.scala 24:24]
    accelerator.io.dataRead <= dataMemory.io.dataRead @[SystemTop.scala 27:27]
    dataMemory.io.address <= accelerator.io.address @[SystemTop.scala 28:25]
    dataMemory.io.dataWrite <= accelerator.io.dataWrite @[SystemTop.scala 29:27]
    dataMemory.io.writeEnable <= accelerator.io.writeEnable @[SystemTop.scala 30:29]
    dataMemory.io.testerAddress <= io.testerDataMemAddress @[SystemTop.scala 33:31]
    io.testerDataMemDataRead <= dataMemory.io.testerDataRead @[SystemTop.scala 34:28]
    dataMemory.io.testerDataWrite <= io.testerDataMemDataWrite @[SystemTop.scala 35:33]
    dataMemory.io.testerEnable <= io.testerDataMemEnable @[SystemTop.scala 36:30]
    dataMemory.io.testerWriteEnable <= io.testerDataMemWriteEnable @[SystemTop.scala 37:35]
    
